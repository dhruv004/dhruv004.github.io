{"version":3,"sources":["webpack:///path---loopback-insert-many-3a5b6dbff19b5b9dee40.js","webpack:///./.cache/json/loopback-insert-many.json"],"names":["webpackJsonp","396","module","exports","data","markdownRemark","html","frontmatter","title","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,KAAA,qrBAAmkBC,aAAwIC,MAAA,8BAAqCC,aAAgBC,KAAA","file":"path---loopback-insert-many-3a5b6dbff19b5b9dee40.js","sourcesContent":["webpackJsonp([123332429413032],{\n\n/***/ 396:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>I recently faced a challenge of inserting many records with loopback.The use case involved insertion on more than <code>100000+</code>(one hundred thousand) records.\\nTo do this we will use the MongoDb driver method <code>insertMany</code>.</p>\\n<p>To access this we need to use database connector.</p>\\n<pre><code>module.exports = function(User){\\n  var DbConnector = User.app.dataSources.db.connector;\\n  DbConnector.connect(function(err, db) {\\n      db.collection('users').insertMany(user, function(err, docs) {\\n        console.log(docs.length)\\n      })\\n  })\\n}\\n</code></pre>\\n<blockquote>\\n<p>With this implementation the time taken was reduced significantly.</p>\\n</blockquote>\",\"frontmatter\":{\"title\":\"InsertMany with Loopback\"}}},\"pathContext\":{\"slug\":\"/loopbackInsertMany/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---loopback-insert-many-3a5b6dbff19b5b9dee40.js","module.exports = {\"data\":{\"markdownRemark\":{\"html\":\"<p>I recently faced a challenge of inserting many records with loopback.The use case involved insertion on more than <code>100000+</code>(one hundred thousand) records.\\nTo do this we will use the MongoDb driver method <code>insertMany</code>.</p>\\n<p>To access this we need to use database connector.</p>\\n<pre><code>module.exports = function(User){\\n  var DbConnector = User.app.dataSources.db.connector;\\n  DbConnector.connect(function(err, db) {\\n      db.collection('users').insertMany(user, function(err, docs) {\\n        console.log(docs.length)\\n      })\\n  })\\n}\\n</code></pre>\\n<blockquote>\\n<p>With this implementation the time taken was reduced significantly.</p>\\n</blockquote>\",\"frontmatter\":{\"title\":\"InsertMany with Loopback\"}}},\"pathContext\":{\"slug\":\"/loopbackInsertMany/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/loopback-insert-many.json\n// module id = 396\n// module chunks = 123332429413032"],"sourceRoot":""}