webpackJsonp([0x8f62686f6464],{402:function(n,s){n.exports={data:{markdownRemark:{html:'<p>This blog makes uses a script file to upload a csv file data from a node expressjs application.</p>\n<p>Start by creating a node app with express. This is what our index.js file would look like.</p>\n<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token string">"use strict"</span>\n\n<span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'express\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'/\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">\'Hello World!\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">\'Example app listening on port 3000!\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>\n<p>We will use the <a href="http://c2fo.github.io/fast-csv">fast-csv</a> library</p>\n<blockquote>\n<p><code class="language-text">npm install fast-csv –-save</code></p>\n</blockquote>\n<p>After this let us add a new route to our index.js file.</p>\n<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">//other requires</span>\n<span class="token keyword">const</span> csv <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fast-csv"</span><span class="token punctuation">)</span>\n\napp<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">\'/readCSV\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> csvData <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> <span class="token constant">CSV_STRING</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">;</span>\n    csv\n    <span class="token punctuation">.</span><span class="token function">fromString</span><span class="token punctuation">(</span><span class="token constant">CSV_STRING</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n        headers<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"count"</span><span class="token punctuation">,</span> <span class="token string">"value"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        ignoreEmpty<span class="token operator">:</span> <span class="token boolean">true</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        csvData<span class="token punctuation">[</span>data<span class="token punctuation">.</span>value<span class="token punctuation">]</span> <span class="token operator">=</span> data\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"end"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>csvData<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">//make call to database</span>\n        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">\'Done\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>\n<p>To get csv data in req.body we will use the <a href="https://github.com/expressjs/body-parser">body-parser</a> package </p>\n<blockquote>\n<p><code class="language-text">npm install body-parser –save</code></p>\n</blockquote>\n<p>Now to use body parser add the text body parser.</p>\n<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'express\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'body-parser\'</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> csv <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fast-csv"</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  </code></pre></div>\n<p>Now to make the import faster lets create a script that will post the csv file to the server. Create a file name importCSV.sh. This is how the shell script will look like.</p>\n<p><img src="https://user-images.githubusercontent.com/17777371/38450796-a74a445a-3a41-11e8-8246-53e233b95efd.png" alt="image"></p>\n<p>Now since the script and the csv file belong in the same directory, I did not have to alter path. But you can provide your own path to the csv file in the –data-binary property.\nTo run this</p>\n<ul>\n<li>Start the server with node index.js</li>\n<li>Open the git bash terminal and run importCSV.sh\nThis is how the request and response will look like</li>\n</ul>\n<p><img src="https://user-images.githubusercontent.com/17777371/38450798-bc461014-3a41-11e8-9bf5-4368dee9fb5c.png" alt="image"></p>\n<p><img src="https://user-images.githubusercontent.com/17777371/38450810-d6f90f7e-3a41-11e8-8dcd-3d6bb10f832d.png" alt="image"></p>\n<p>You can find the code <a href="https://github.com/dhruv004/nodeUploadCsv">here</a></p>',frontmatter:{title:"Upload CSV file using node"}}},pathContext:{slug:"/nodeUploadCsv/"}}}});
//# sourceMappingURL=path---node-upload-csv-1057da64b8eb6c090b23.js.map