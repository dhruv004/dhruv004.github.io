{"version":3,"sources":["webpack:///./src/templates/tags/index.tsx"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","className","map","node","frontmatter","path","title","key","to","pageQuery"],"mappings":"4FAAA,8GAwCeA,UAnCF,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACjBC,EAAQF,EAARE,IAD4B,EAEND,EAAKE,kBAA3BC,EAF4B,EAE5BA,MAAOC,EAFqB,EAErBA,WACTC,EAAeD,EAAN,SACI,IAAfA,EAAmB,GAAK,KADb,iBAEEH,EAFF,IAIf,OACI,kBAAC,IAAD,KACI,yBAAKK,UAAU,kBACX,4BAAKD,GACL,yBAAKC,UAAU,aACX,4BACKH,EAAMI,KAAI,YAAc,QAAXC,KACmBC,YAArBC,EADa,EACbA,KAAMC,EADO,EACPA,MACd,OACI,wBAAIC,IAAKF,GACL,kBAAC,IAAD,CAAMG,GAAIH,GAAOC,SAUrC,kBAAC,IAAD,CAAML,UAAU,mCAAmCO,GAAG,SAAtD,eAUT,IAAMC,EAAY,c","file":"component---src-templates-tags-index-tsx-927586771f7a8d03412e.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport \"./index.scss\"\nimport { Layout } from \"../../components/Layout\"\n\nconst Tags = ({ pageContext, data }) => {\n    const { tag } = pageContext\n    const { edges, totalCount } = data.allMarkdownRemark\n    const tagHeader = `${totalCount} post${\n        totalCount === 1 ? \"\" : \"s\"\n    } tagged with \"${tag}\"`\n\n    return (\n        <Layout>\n            <div className=\"tags-container\">\n                <h1>{tagHeader}</h1>\n                <div className=\"tags-list\">\n                    <ul>\n                        {edges.map(({ node }) => {\n                            const { path, title } = node.frontmatter\n                            return (\n                                <li key={path}>\n                                    <Link to={path}>{title}</Link>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n                {/*\n            This links to a page that does not yet exist.\n            We'll come back to it!\n            */}\n                <Link className=\"button all-tags-btn center -alge\" to=\"/tags\">\n                    All tags\n                </Link>\n            </div>\n        </Layout>\n    )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n    query TagPage($tag: String) {\n        allMarkdownRemark(\n            limit: 2000\n            sort: { fields: [frontmatter___date], order: DESC }\n            filter: { frontmatter: { tags: { in: [$tag] } } }\n        ) {\n            totalCount\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        path\n                    }\n                }\n            }\n        }\n    }\n`\n"],"sourceRoot":""}